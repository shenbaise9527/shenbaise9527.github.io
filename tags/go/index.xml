<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title>go - 标签 - 深白色9527</title>
        <link>https://shenbaise9527.com/tags/go/</link>
        <description>go - 标签 - 深白色9527</description>
        <generator>Hugo -- gohugo.io</generator><language>zh-CN</language><managingEditor>zhouyingan@gmail.com (深白色)</managingEditor>
            <webMaster>zhouyingan@gmail.com (深白色)</webMaster><copyright>This work is licensed under a Creative Commons Attribution-NonCommercial 4.0 International License.</copyright><lastBuildDate>Sat, 24 Jul 2021 21:56:42 &#43;0800</lastBuildDate><atom:link href="https://shenbaise9527.com/tags/go/" rel="self" type="application/rss+xml" /><item>
    <title>Golang与C语言相互调用</title>
    <link>https://shenbaise9527.com/2021/07/24/golang-c-call/</link>
    <pubDate>Sat, 24 Jul 2021 21:56:42 &#43;0800</pubDate>
    <author>作者</author>
    <guid>https://shenbaise9527.com/2021/07/24/golang-c-call/</guid>
    <description><![CDATA[主要是描述Go语言调用易盛行情API的动态库过程中，一些需要注意的地方。 类型对应关系 C类型 调用方法 Go类型 字节数 char C.char byte 1 signed char C.schar int8 1 unsigned char C.uchar uint8 1]]></description>
</item><item>
    <title>golang字符串解析</title>
    <link>https://shenbaise9527.com/2021/07/24/golang-string/</link>
    <pubDate>Sat, 24 Jul 2021 16:57:37 &#43;0800</pubDate>
    <author>作者</author>
    <guid>https://shenbaise9527.com/2021/07/24/golang-string/</guid>
    <description><![CDATA[字符编码 计算机世界中只能识别二进制,所有的信息最终都会表示成一个二进制的字符串,每一个二进制位有0和1两种状态. 当在计算机中存储字符&rsq]]></description>
</item><item>
    <title>Etcd操作指南</title>
    <link>https://shenbaise9527.com/2020/12/23/etcd-operation-guide/</link>
    <pubDate>Wed, 23 Dec 2020 20:58:37 &#43;0800</pubDate>
    <author>作者</author>
    <guid>https://shenbaise9527.com/2020/12/23/etcd-operation-guide/</guid>
    <description><![CDATA[简介 etcd是强一致性的,分布式KV存储,为分布式系统或集群提供可靠的数据存储.底层基于raft共识算法,可以在网络分区情况下正常进行lea]]></description>
</item><item>
    <title>服务启动时连接etcd集群的告警分析</title>
    <link>https://shenbaise9527.com/2020/12/21/etcd-application-start-warn/</link>
    <pubDate>Mon, 21 Dec 2020 21:18:21 &#43;0800</pubDate>
    <author>作者</author>
    <guid>https://shenbaise9527.com/2020/12/21/etcd-application-start-warn/</guid>
    <description><![CDATA[问题起因 通过docker-compose部署了3个节点的etcd集群,服务在启动时会随机报0个、1个或2个告警信息,信息如下: 1 2 3 4 5 6 7]]></description>
</item><item>
    <title>Etcd配置错误后的分析</title>
    <link>https://shenbaise9527.com/2020/12/19/etcd-configure-error/</link>
    <pubDate>Sat, 19 Dec 2020 11:09:19 &#43;0800</pubDate>
    <author>作者</author>
    <guid>https://shenbaise9527.com/2020/12/19/etcd-configure-error/</guid>
    <description><![CDATA[问题起因 在采用开源框架go-zero开发的过程中,服务在启动一段时间后控制台一直在报如下警告信息: 1 2 3 4 5 6 7 8 9 { &#34;level&#34;: &#34;warn&#34;, &#34;ts&#34;: &#34;2020-12-15T16:43:21.709+0800&#34;, &#34;caller&#34;: &#34;clientv3/retry_interceptor.go:62&#34;, &#34;msg&#34;: &#34;retrying of unary invoker]]></description>
</item><item>
    <title>golang数据类型</title>
    <link>https://shenbaise9527.com/2020/11/22/golang-data-type/</link>
    <pubDate>Sun, 22 Nov 2020 11:41:27 &#43;0800</pubDate>
    <author>作者</author>
    <guid>https://shenbaise9527.com/2020/11/22/golang-data-type/</guid>
    <description><![CDATA[主要包含基本的内建类型(布尔类型、数值类型和字符串类型)和复合类型(array、slice、map、channel、function、str]]></description>
</item><item>
    <title>gRPC系列之连接异常机制</title>
    <link>https://shenbaise9527.com/2020/11/07/grpc-connection-exception/</link>
    <pubDate>Sat, 07 Nov 2020 13:27:24 &#43;0800</pubDate>
    <author>作者</author>
    <guid>https://shenbaise9527.com/2020/11/07/grpc-connection-exception/</guid>
    <description><![CDATA[连接server端失败的处理 重试机制 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52]]></description>
</item><item>
    <title>gRPC系列之client和server的timetou机制</title>
    <link>https://shenbaise9527.com/2020/11/07/grpc-client-server-timeout/</link>
    <pubDate>Sat, 07 Nov 2020 13:22:04 &#43;0800</pubDate>
    <author>作者</author>
    <guid>https://shenbaise9527.com/2020/11/07/grpc-client-server-timeout/</guid>
    <description><![CDATA[客户端超时的处理 客户端在调用rpc接口时带timeout的context是如何传递给服务端的. 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23]]></description>
</item><item>
    <title>gRPC系列之client端调用</title>
    <link>https://shenbaise9527.com/2020/11/07/grpc-client-call/</link>
    <pubDate>Sat, 07 Nov 2020 13:16:47 &#43;0800</pubDate>
    <author>作者</author>
    <guid>https://shenbaise9527.com/2020/11/07/grpc-client-call/</guid>
    <description><![CDATA[Dail/DailContext与服务端建立连接 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46]]></description>
</item><item>
    <title>gRPC系列之server端调用</title>
    <link>https://shenbaise9527.com/2020/11/07/grpc-server-call/</link>
    <pubDate>Sat, 07 Nov 2020 11:47:48 &#43;0800</pubDate>
    <author>作者</author>
    <guid>https://shenbaise9527.com/2020/11/07/grpc-server-call/</guid>
    <description><![CDATA[NewServer创建gRPC服务对象 主要是基于grpc-go的1.33.1版本Unary RPC来分析. 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18]]></description>
</item></channel>
</rss>
